// ------------------------------------------------------------------------
// ========================================================================
// THIS CODE AND INFORMATION ARE GENERATED BY AUTOMATIC CODE GENERATOR
// ========================================================================
// Template:   ViewModel.tt
using System;
using System.Collections.ObjectModel;
using System.Diagnostics;
using System.Windows.Input;
using WPAppStudio;
using WPAppStudio.Controls;
using WPAppStudio.Entities;
using WPAppStudio.Entities.Base;
using WPAppStudio.Localization;
using WPAppStudio.Repositories;
using WPAppStudio.Services;
using WPAppStudio.Services.Interfaces;
using WPAppStudio.Shared;
using WPAppStudio.ViewModel.Base;
using WPAppStudio.ViewModel.Interfaces;

namespace WPAppStudio.ViewModel
{
    /// <summary>
    /// Implementation of AboutIndia ViewModel.
    /// </summary>
    [System.Runtime.CompilerServices.CompilerGenerated]
    [System.CodeDom.Compiler.GeneratedCode("Radarc", "4.0")]
    public partial class AboutIndiaViewModel : BindableBase, IAboutIndiaViewModel
    {       

		private readonly IDialogService _dialogService;
		private readonly INavigationService _navigationService;
		private readonly ILockScreenService _lockScreenService;
		private readonly Iinfo _info;
		private readonly ImonumentsCollection _monumentsCollection;
		private readonly Ialbum _album;
		private readonly IvideoAlbum _videoAlbum;
		
        /// <summary>
        /// Initializes a new instance of the <see cref="AboutIndiaViewModel" /> class.
        /// </summary>
        /// <param name="dialogService">The Dialog Service.</param>
        /// <param name="navigationService">The Navigation Service.</param>
        /// <param name="lockScreenService">The Lock Screen Service.</param>
        /// <param name="info">The Info.</param>
        /// <param name="monumentsCollection">The Monuments Collection.</param>
        /// <param name="album">The Album.</param>
        /// <param name="videoAlbum">The Video Album.</param>
        public AboutIndiaViewModel(IDialogService dialogService, INavigationService navigationService, ILockScreenService lockScreenService, Iinfo info, ImonumentsCollection monumentsCollection, Ialbum album, IvideoAlbum videoAlbum)
        {
			_dialogService = dialogService;
			_navigationService = navigationService;
			_lockScreenService = lockScreenService;
			_info = info;
			_monumentsCollection = monumentsCollection;
			_album = album;
			_videoAlbum = videoAlbum;
        }
		

		private string _currentAboutIndiaHtmlControl;

        /// <summary>
        /// CurrentAboutIndiaHtmlControl property.
        /// </summary>		
        public string CurrentAboutIndiaHtmlControl
        {
            get
            {
                if(_currentAboutIndiaHtmlControl == null)
					_currentAboutIndiaHtmlControl = _info.Get();
				return _currentAboutIndiaHtmlControl;     
            }
            set
            {
                SetProperty(ref _currentAboutIndiaHtmlControl, value);
            }
        }

		private MenuItemData _selectedMenuSection_MenuMenuControl;

        /// <summary>
        /// SelectedMenuSection_MenuMenuControl property.
        /// </summary>		
        public MenuItemData SelectedMenuSection_MenuMenuControl
        {
            get
            {
				return _selectedMenuSection_MenuMenuControl;
            }
            set
            {
                _selectedMenuSection_MenuMenuControl = value;
                if (value != null)
                    _navigationService.NavigateTo(value);
            }
        }

		private ObservableCollection<monumentsCollectionSchema> _monuments_ListListControlCollection;

        /// <summary>
        /// Monuments_ListListControlCollection property.
        /// </summary>		
        public ObservableCollection<monumentsCollectionSchema> Monuments_ListListControlCollection
        {
            get
            {
                if(_monuments_ListListControlCollection == null)
					_monuments_ListListControlCollection = _monumentsCollection.GetData();
				return _monuments_ListListControlCollection;     
            }
            set
            {
                SetProperty(ref _monuments_ListListControlCollection, value);
            }
        }

		private monumentsCollectionSchema _selectedmonuments_ListListControlCollection;

        /// <summary>
        /// Selectedmonuments_ListListControlCollection property.
        /// </summary>		
        public monumentsCollectionSchema Selectedmonuments_ListListControlCollection
        {
            get
            {
				return _selectedmonuments_ListListControlCollection;
            }
            set
            {
                _selectedmonuments_ListListControlCollection = value;
                if (value != null)
                    _navigationService.NavigateTo<Imonuments_DetailViewModel>(_selectedmonuments_ListListControlCollection);
            }
        }

		private ObservableCollection<RssSearchResult> _photoAlbum_NewsListControlCollection;

        /// <summary>
        /// PhotoAlbum_NewsListControlCollection property.
        /// </summary>		
        public ObservableCollection<RssSearchResult> PhotoAlbum_NewsListControlCollection
        {
            get
            {
                if(_photoAlbum_NewsListControlCollection == null)
					RefreshPhotoAlbum_NewsListControlCollectionDelegate();
				return _photoAlbum_NewsListControlCollection;     
            }
            set
            {
                SetProperty(ref _photoAlbum_NewsListControlCollection, value);
            }
        }

		private RssSearchResult _selectedPhotoAlbum_NewsListControlCollection;

        /// <summary>
        /// SelectedPhotoAlbum_NewsListControlCollection property.
        /// </summary>		
        public RssSearchResult SelectedPhotoAlbum_NewsListControlCollection
        {
            get
            {
				return _selectedPhotoAlbum_NewsListControlCollection;
            }
            set
            {
                _selectedPhotoAlbum_NewsListControlCollection = value;
                if (value != null)
                    _navigationService.NavigateTo<IPhotoAlbum_DetailViewModel>(_selectedPhotoAlbum_NewsListControlCollection);
            }
        }

		private ObservableCollection<YouTubeVideo> _videoAlbum_VideosListControlCollection;

        /// <summary>
        /// VideoAlbum_VideosListControlCollection property.
        /// </summary>		
        public ObservableCollection<YouTubeVideo> VideoAlbum_VideosListControlCollection
        {
            get
            {
                if(_videoAlbum_VideosListControlCollection == null)
					RefreshVideoAlbum_VideosListControlCollectionDelegate();
				return _videoAlbum_VideosListControlCollection;     
            }
            set
            {
                SetProperty(ref _videoAlbum_VideosListControlCollection, value);
            }
        }

		private YouTubeVideo _selectedVideoAlbum_VideosListControlCollection;

        /// <summary>
        /// SelectedVideoAlbum_VideosListControlCollection property.
        /// </summary>		
        public YouTubeVideo SelectedVideoAlbum_VideosListControlCollection
        {
            get
            {
				return _selectedVideoAlbum_VideosListControlCollection;
            }
            set
            {
                _selectedVideoAlbum_VideosListControlCollection = value;
                if (value != null)
                    _navigationService.NavigateTo<IVideoAlbum_DetailVideosViewModel>(_selectedVideoAlbum_VideosListControlCollection);
            }
        }

        /// <summary>
        /// Delegate method for the RefreshPhotoAlbum_NewsListControlCollection command.
        /// </summary>
        public async void RefreshPhotoAlbum_NewsListControlCollectionDelegate(int pageNumber= 1) 
        {
			try
			{
				LoadingPhotoAlbum_NewsListControlCollection = true;
				PhotoAlbum_NewsListControlCollection = await _album.GetData();
			}
            catch (Exception ex)
            {
				PhotoAlbum_NewsListControlCollection = null;
		
                Debug.WriteLine(ex.ToString());
                _dialogService.Show(AppResources.rssError + Environment.NewLine + AppResources.TryAgain);
            }
            finally
            {
				LoadingPhotoAlbum_NewsListControlCollection = false;
			}
        }
		
		
        private bool _loadingPhotoAlbum_NewsListControlCollection;
		
        public bool LoadingPhotoAlbum_NewsListControlCollection
        {
            get { return _loadingPhotoAlbum_NewsListControlCollection; }
            set { SetProperty(ref _loadingPhotoAlbum_NewsListControlCollection, value); }
        }

        private ICommand _refreshPhotoAlbum_NewsListControlCollection;

        /// <summary>
        /// Gets the RefreshPhotoAlbum_NewsListControlCollection command.
        /// </summary>
        public ICommand RefreshPhotoAlbum_NewsListControlCollection
        {
            get { return _refreshPhotoAlbum_NewsListControlCollection = _refreshPhotoAlbum_NewsListControlCollection ?? new DelegateCommand<int>(RefreshPhotoAlbum_NewsListControlCollectionDelegate); }
        }

        /// <summary>
        /// Delegate method for the RefreshVideoAlbum_VideosListControlCollection command.
        /// </summary>
        public async void RefreshVideoAlbum_VideosListControlCollectionDelegate(int pageNumber= 1) 
        {
			try
			{
				LoadingVideoAlbum_VideosListControlCollection = true;

                if (pageNumber == 1)
				{
					var items = await  _videoAlbum.GetData(1);
                    VideoAlbum_VideosListControlCollection = items;
				}
                else   
				{
					var items = await  _videoAlbum.GetData(pageNumber);
                    foreach (var item in items)                    
                        _videoAlbum_VideosListControlCollection.Add(item);
				}
			}
            catch (Exception ex)
            {
				VideoAlbum_VideosListControlCollection = null;
		
                Debug.WriteLine(ex.ToString());
                _dialogService.Show(AppResources.youtubeError + Environment.NewLine + AppResources.TryAgain);
            }
            finally
            {
				LoadingVideoAlbum_VideosListControlCollection = false;
			}
        }
		
		
        private bool _loadingVideoAlbum_VideosListControlCollection;
		
        public bool LoadingVideoAlbum_VideosListControlCollection
        {
            get { return _loadingVideoAlbum_VideosListControlCollection; }
            set { SetProperty(ref _loadingVideoAlbum_VideosListControlCollection, value); }
        }

        private ICommand _refreshVideoAlbum_VideosListControlCollection;

        /// <summary>
        /// Gets the RefreshVideoAlbum_VideosListControlCollection command.
        /// </summary>
        public ICommand RefreshVideoAlbum_VideosListControlCollection
        {
            get { return _refreshVideoAlbum_VideosListControlCollection = _refreshVideoAlbum_VideosListControlCollection ?? new DelegateCommand<int>(RefreshVideoAlbum_VideosListControlCollectionDelegate); }
        }

        /// <summary>
        /// Delegate method for the SetLockScreenCommand command.
        /// </summary>
        public  void SetLockScreenCommandDelegate() 
        {
	
				_lockScreenService.SetLockScreen("LockScreen-3c98fb56-6305-4681-a7e9-50d24dc95c8b.jpg");
        }
		

        private ICommand _setLockScreenCommand;

        /// <summary>
        /// Gets the SetLockScreenCommand command.
        /// </summary>
        public ICommand SetLockScreenCommand
        {
            get { return _setLockScreenCommand = _setLockScreenCommand ?? new DelegateCommand(SetLockScreenCommandDelegate); }
        }
    }
}
